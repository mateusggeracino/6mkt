// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _6MKT.BackOffice.Infra.Context;

namespace _6MKT.BackOffice.Infra.Migrations
{
    [DbContext(typeof(MktContext))]
    partial class MktContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.BusinessEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.Property<string>("RegisteredNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("TradeName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.HasKey("Id");

                    b.ToTable("Business","backoffice");
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.CategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Category","backoffice");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "Casa, Móveis e Decoração"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "Celulares e Telefones"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "Games"
                        });
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.NaturalPersonEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(80)")
                        .HasMaxLength(80);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("SocialNumber")
                        .HasColumnType("nvarchar(14)")
                        .HasMaxLength(14);

                    b.HasKey("Id");

                    b.ToTable("NaturalPerson","backoffice");
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.OfferEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<bool>("InStock")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.Property<long>("PurchaseId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("BusinessId");

                    b.HasIndex("PurchaseId");

                    b.ToTable("Offer","backoffice");
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.PurchaseEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AveragePrice")
                        .HasColumnType("float");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.Property<long?>("NaturalPersonEntityId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<long>("SubCategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.HasKey("Id");

                    b.HasIndex("NaturalPersonEntityId");

                    b.HasIndex("SubCategoryId");

                    b.ToTable("Purchase","backoffice");
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.SubCategoryEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("CreatedId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<DateTimeOffset?>("ModifiedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<long?>("ModifiedId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("SubCategory","backoffice");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryId = 1L,
                            Description = "Banheiros"
                        },
                        new
                        {
                            Id = 2L,
                            CategoryId = 1L,
                            Description = "Colchões e Camas Box"
                        },
                        new
                        {
                            Id = 3L,
                            CategoryId = 1L,
                            Description = "Cortinas e Acessórios"
                        },
                        new
                        {
                            Id = 4L,
                            CategoryId = 1L,
                            Description = "Móveis para Casa"
                        },
                        new
                        {
                            Id = 5L,
                            CategoryId = 2L,
                            Description = "Acessórios para Celulares"
                        },
                        new
                        {
                            Id = 6L,
                            CategoryId = 2L,
                            Description = "Celulares e Smartphones"
                        },
                        new
                        {
                            Id = 7L,
                            CategoryId = 2L,
                            Description = "Tarifadores e Cabines"
                        },
                        new
                        {
                            Id = 8L,
                            CategoryId = 3L,
                            Description = "Consoles"
                        },
                        new
                        {
                            Id = 9L,
                            CategoryId = 3L,
                            Description = "Peças para Consoles"
                        },
                        new
                        {
                            Id = 10L,
                            CategoryId = 3L,
                            Description = "Acessórios para PC Gaming"
                        },
                        new
                        {
                            Id = 11L,
                            CategoryId = 3L,
                            Description = "Video Games"
                        });
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.OfferEntity", b =>
                {
                    b.HasOne("_6MKT.BackOffice.Domain.Entities.BusinessEntity", "Business")
                        .WithMany("Offers")
                        .HasForeignKey("BusinessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("_6MKT.BackOffice.Domain.Entities.PurchaseEntity", "Purchase")
                        .WithMany("Offers")
                        .HasForeignKey("PurchaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.PurchaseEntity", b =>
                {
                    b.HasOne("_6MKT.BackOffice.Domain.Entities.NaturalPersonEntity", null)
                        .WithMany("Purchases")
                        .HasForeignKey("NaturalPersonEntityId");

                    b.HasOne("_6MKT.BackOffice.Domain.Entities.SubCategoryEntity", "SubCategory")
                        .WithMany("Purchases")
                        .HasForeignKey("SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("_6MKT.BackOffice.Domain.Entities.SubCategoryEntity", b =>
                {
                    b.HasOne("_6MKT.BackOffice.Domain.Entities.CategoryEntity", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
